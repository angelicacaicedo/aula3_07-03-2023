sLARIO DE FUNCIONARIOS CON LIMITES DE FAXAS DE RENTE, ALIQUOTAS...

#include <iostream>

using namespace std;

int main() {
    const double faixas[] = {1903.98, 2826.65, 3751.05, 4664.68}; // Limites de las faxas de renta
    const double aliquotas[] = {0.0, 0.075, 0.15, 0.225, 0.275}; // Aliquotas correspondentes

    int funcionarios[5] = {0}; // Array para almacenar el conteo de funcionários en cada faixa

    double salario;
    while (true) {
        printf("Digite o salário do funcionário (1 para parar): ");
        scanf("%le", &salario);

        if (salario == 1)
            break;

        // Verificar en cual faixa o salario se encuentra
        int faixa = 0;
        while (faixa < 4 && salario > faixas[faixa + 1])
            faixa++;

        funcionarios[faixa]++; 
    }
    printf("\nNúmero de funcionários em cada faixa do Imposto de Renda:\n");
    
    for (int i = 0; i < 5; i++) {
        if (i == 0)
            printf("Até R$ %f: %d funcionário(s)\n", faixas[i], funcionarios[i]);
        else if (i == 4)
            printf("Acima de R$ %f: %d funcionário(s)\n", faixas[i - 1], funcionarios[i]);
        else
            printf("De R$ %f a R$ %f: %d funcionário(s)\n", faixas[i - 1], faixas[i], funcionarios[i]);
    }

    return 0;
}





JUEGO DE LA VELHA.

#include <iostream>
using namespace std;
// Función para imprimir el tablero de juego
void imprimirTablero(char tablero[3][3]) {
    printf("Tablero de juego:\n");
 
        for(int r = 0 ; r <3 ; r ++){
        printf(" %c | ", (tablero [r][0]));
        printf(" %c | ", (tablero [r][1]));
        printf(" %c \n",(tablero [r][2]));

        if(r!=2){
            printf("___ ___ ___\n");
        }
        }
    }


// Función para verificar si hay un ganador
char verificarGanador(char tablero[3][3]) {
    // Verificar filas
    for (int i = 0; i < 3; i++) {
        if (tablero[i][0] != ' ' && tablero[i][0] == tablero[i][1] && tablero[i][1] == tablero[i][2]) {
            return tablero[i][0];
        }
    }

    // Verificar columnas
    for (int j = 0; j < 3; j++) {
        if (tablero[0][j] != ' ' && tablero[0][j] == tablero[1][j] && tablero[1][j] == tablero[2][j]) {
            return tablero[0][j];
        }
    }

    // Verificar diagonales
    if (tablero[0][0] != ' ' && tablero[0][0] == tablero[1][1] && tablero[1][1] == tablero[2][2]) {
        return tablero[0][0];
    }
    if (tablero[0][2] != ' ' && tablero[0][2] == tablero[1][1] && tablero[1][1] == tablero[2][0]) {
        return tablero[0][2];
    }

    // No hay ganador
    return ' ';
}

int main() {
    char tablero[3][3] = { { ' ', ' ', ' ' },
                           { ' ', ' ', ' ' },
                           { ' ', ' ', ' ' } };
    char jugadorActual = 'X';
    int fila, columna;

    while (true) {
        imprimirTablero(tablero);

        // Solicitar la posición del jugador actual
        printf("Jugador %c, ingrese la fila (0-2): ", jugadorActual);
        scanf("%d", &fila);
        printf("Jugador %c, ingrese la columna (0-2): ", jugadorActual);
        scanf("%d", &columna);

        // Verificar si la posición es válida
        if (fila < 0 || fila > 2 || columna < 0 || columna > 2 || tablero[fila][columna] != ' ') {
            printf("Posición inválida. Inténtelo de nuevo.\n");
            continue;
        }

        // Actualizar el tablero con la jugada del jugador actual
        tablero[fila][columna] = jugadorActual;

        // Verificar si hay un ganador
        char ganador = verificarGanador(tablero);
        if (ganador != ' ') {
            imprimirTablero(tablero);
            printf("¡El jugador %c ha ganado el juego!\n", ganador);
            break;
        }

        // Verificar si hay un empate (tablero lleno)
        bool empate = true;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (tablero[i][j] == ' ') {
                    empate = false;
                    break;
                }
            }
            if (!empate) {
                break;
            }
        }
        if (empate) {
            imprimirTablero(tablero);
            printf("¡Empate! No hay más movimientos posibles.\n");
            break;
        }

        // Cambiar al siguiente jugador
        jugadorActual = (jugadorActual == 'X') ? 'O' : 'X';
    }

    return 0;
}

