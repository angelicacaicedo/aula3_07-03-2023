//Faça um algoritmo que defina faixas de crédito de acordo com:
//Faixa etária 1: Pessoas com idade entre 18 e 25 anos podem assumir finaniciamiento de até 50mil.
//Faixa etária 2:Pessoas com idade entre 25 e 40 anos podem assumir finaniciamiento de até 400mil.
//Faixa etária 3:Pessoas com idade entre 40 e 60 anos podem assumir finaniciamiento de até 800mil.
//Faixa etária 4:Pessoas com idade acima de 60 anos podem assumir finaniciamiento de até 150mil.

//Caso a pessoa seja solteira poderá assumir 80% do valor associado a sua faixa etária.
//Caso a pessoa esteja desempregada poderá assumir até 20% do valor associado a sua faixa etária.
//Para as faixas etária 1 e 4, considerar um fator de risco maior para os casos de 8% acima das demais.
//Caso a pessoa tenha outro finaniciamiento você deberá considerar 70% do valor aprovado de acordo com os criterios anteriores.
//Se o finaniciamiento for para veículo automotor considerar juros de 20% ao ano para veículos de até 5 anos de uso, 
//Para veículos de até 15 anos considerar 25%
//veículos mais antigos considerar 30%, caso seja para moradia considerar 9% ao ano.
//Mostrar ao final, quanto foi concedido para financiar, qual a taxa de juros aplicada, qual é o valor final de acordo com o prazo de finaniciamiento.
//E qual é o valor da parcela resultante. 



#include <iostream>
using namespace std;

int main() {
    
int idade, valor_financiamento, valor_maximo;

int estado_civil, situacao_profissional, finalidade_financiamento;

float taxa_juros, valor_final, parcela;

printf("Digite a idade\n");
scanf("%d", &idade);

if (idade >= 18 && idade <= 25) {
    valor_maximo = 50000;
    taxa_juros = 0.08;
} else if (idade > 25 && idade <= 40) {
    valor_maximo = 400000;
    taxa_juros = 0.06;
} else if (idade > 40 && idade <= 60) {
    valor_maximo = 800000;
    taxa_juros = 0.04;
} else if (idade > 60) {
    valor_maximo = 150000;
    taxa_juros = 0.08;
} else {
    printf("Idade inválida.\n");
    return 0;
}

printf("Digite o estado civil (1- solteiro ou 2- casado):\n ");
scanf( "%d", &estado_civil);

if (estado_civil == 1) {
    valor_maximo *= 0.8;
}

printf("Digite a situação profissional (empregado ou desempregado):\n ");
scanf( "%c", &situacao_profissional);

if (situacao_profissional = "desempregado") {
    valor_maximo *= 0.2;
}

printf("Digite a finalidade do financiamento (veículo ou moradia):\n ");
scanf( "%c", &finalidade_financiamento);

if (finalidade_financiamento = "veículo") {
    int idade_veiculo;
    printf("Digite a idade do veículo:\n ");
    scanf( "%d", &idade_veiculo);

    if (idade_veiculo <= 5) {
        taxa_juros += 0.2;
    } else if (idade_veiculo <= 15) {
        taxa_juros += 0.25;
    } else {
        taxa_juros += 0.3;
    }
} else if (finalidade_financiamento = "moradia") {
    taxa_juros += 0.09;
} else {
    printf("Finalidade inválida.\t");
    return 0;
}

printf("Digite o valor do financiamento: ");
scanf( "%d", &valor_financiamento);

if (valor_financiamento > valor_maximo) {
    printf("Valor de financiamento excedeu o máximo permitido.\t");
    return 0;
}

valor_final = valor_financiamento * (1 + taxa_juros);
printf("Valor final: %f", valor_final);

printf("Digite o prazo de financiamento (em meses): ");
int prazo;
scanf( "%d", &prazo);

parcela = valor_final / prazo;
printf("Valor da parcela: %f", parcela);

return 0;
}


AULA 22/05/2023

REPASAR:
FOR
WHILE
DO WHILE.
VECTORES
MATRIZES



/******************************************************************************
Desenvolva um algoritmo que receba os nomes de times de futebol, quantas vitorias e empates.
A quantidade de jogos debe ser eqivalente para todos os 20 times.
Guarde a puntaçao de cada time.
Imprima em orden de classificaçao baseada nos pontos.
Como critério de desempate use os gols a favor e contra, nesta orden.
*******************************************************************************/



/******************************************************************************
POO E UMA CLASSES.
ATRIBUTO = Una persona tiene atributos, como fisicos etc. son caracteristicas
MÉTODO = Funciones, camina, habla...etc.
Leia uma data de nacimiento
Crie um método que receba esta data
calcule a idade e atribua ao atrubuto.
*******************************************************************************/
#include <bits/stdc++.h>
using namespace std;
#define DIA 6
#define MES 6
#define ANO 2023

class Pessoa {
    //Atributos pueden ser 3 publico: puede ser accesado en cualquier lugar, privado: solo se puede acceder por la clase... pai:
    public:
    string nome;
    double peso, altura;
    int idade;
    
    //MÉTODO
    Pessoa(string nomeParaAtribuir){ //Método constructor da classe, garante que todas las perssonas van a recibir un nome.
        printf("Oba, criamos una pessoa,\n");
        this -> nome = nomeParaAtribuir;
    }
    
    void qualquerCoisa(){
        printf("Chamamos um método :D\n");
        printf("Nome pessoa %s\n", this->nome.c_str());
        printf("Com idade %d", this->idade);
        
        
    }
    void calculaIdade(int dia, int mes, int ano){
        int diaAtual, dias, idade;
        diaAtual = DIA + MES*30 + ANO*365;
        dias = dia + mes*30 + ano*365;
        idade = diaAtual - dias;
        idade = idade /365;
        this->idade = idade;
}
};

int main(){
    int dia, mes, ano;
    string nome;
    printf("Digite um nome: ");
    getline(cin, nome, '\n');
    Pessoa* p;
    p = new Pessoa(nome);
    printf("Digite a data de nascimento (DD/MM/AA): ");
    scanf("%d/%d/%d", &dia, &mes, &ano);
    p->calculaIdade(dia, mes, ano);
    //p = new Pessoa();
    p->qualquerCoisa();

    return 0;
}

/******************************************************************************
Complte o algoritmo abaixo lendo um valor para p.
Imprima o valor e o endereço hexadecimal correspondente. 
*******************************************************************************/
#include <bits/stdc++.h>

int main()
{
    int *p;
    // int x; 
   // p = &x;
   p = (int *) malloc(sizeof(int));
   scanf("%d", p);
    
    printf("%d %p", *p, p);
    
 
    return 0;
}
